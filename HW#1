# coding: utf-8

# In[8]:


import numpy as np


# # Assignment 1

# 
# **Problem 1** - 3 pts each:  Write the solution to the following indefinite integrals using LaTeX.  No credit will be awarded for work turned in in any other format.  Follow the model below.
# $$
# \int \sin(x) dx = -\cos(x) + C
# $$
# 
# <ol>
# <li>    $$
#         \int \sin^{2}(3x) dx
#         $$
# <li>
#     $$
#     \int \frac{dx}{1+4x^2}
#     $$
# <li>
#     $$
#     \int x^{n} dx
#     $$

# _ Answers to Problem 1 _: Write your answers in the lines below using LaTeX.
# 
# 1.1: 
# $$
# \int \sin^{2}(3x) dx = \frac{x}{2}-\frac{\sin{(6x)}}{12}+C
# $$
# 1.2:
# $$
# \int \frac{dx}{1+4x^2} =\frac{\arctan{(2x)}}{2}+C
# $$
# 1.3:
# $$
# \int x^{n} dx = \frac{x^{n+1}}{n+1}+C
# $$

# ** Problem 2 ** - 3 pts each: Using the classic result for a geometric series that 
# 
# $$
# \sum_{n=0}^{\infty}x^{n} = \frac{1}{1-x}, ~ \left|x\right|<1,
# $$
# 
# find the following sums.  Use the above statement of the sum of a geometric series as a model.  Again, use LaTeX to write your answers.  No credit will be given otherwise. 
# 
# <ol>
# 
# <li> 
# $$
# \sum_{j=0}^{\infty} 3^{j/2}x^{2j}, ~ |x|<\frac{1}{3^{1/4}}.
# $$
# 
# <li>
# $$
# \sum_{j=0}^{\infty} \sin^{3j}(x), ~ |x|<\frac{\pi}{2}.
# $$
# 
# <li>
# $$
# \sum_{j=1}^{\infty} e^{2jx}, ~ x<0.
# $$
# 

# _ Answers to Problem 2 _: Write your answers below using LaTeX.  Again, use beginning of the problem statement of Problem 2 as a model for your answers.  
# 
# 2.1: \sum_{j=0}^{\infty} 3^{j/2}x^{2j}= \frac{1}{1-\sqrt{3} x^2}, ~ |x|<\frac{1}{3^{1/4}}
# 
# 2.2: \sum_{j=0}^{\infty} \sin^{3j}(x)=\frac{1}{1-\sin^{3}(x)},~ |x|<\frac{\pi}{2}
# 
# 2.3: \sum_{j=1}^{\infty} e^{2jx}=\frac{e^{2x}}{1-e^{2x}},~ x<0.

# ** Problem 3 ** 10 pts: So, if you go ask the right kind of people, they will tell you that you can find $\pi$ via the following limit. 
# 
# $$
# \pi = \lim_{n\rightarrow\infty} \frac{4}{n^{2}}\sum_{k=0}^{n}\sqrt{n^{2}-k^{2}}
# $$
# 
# So if I give you the following Python function 

# In[41]:


def pi_approx(n):
    tot = 0.
    for kk in xrange(1,int(n)+1):
        tot += np.sqrt(n**2.-kk**2.)
    return 4.*tot/n**2.


# using a list and a for loop as in the lecture, determine $\pi$ to 7-correct digits.    

# In[48]:


values = [1e6, 1e7, 1e8, 1e9, 1e10] #List of different values of n.

for value in values: 
    print "e=%1.7f" %pi_approx(value) #prints value of pi function to 7th digit   


# _ Provide a justification for your answer using the results from your code here._ 

# e=3.1415907
# e=3.1415925
# e=3.1415926
# Computer takes too long to load rest of equation.

